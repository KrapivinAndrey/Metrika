&НаКлиенте
Перем КМетрика;

&НаКлиенте
Функция НоваяМетрика() Экспорт
	
	МодульМетрика().НоваяМетрика();
	
	Возврат МодульМетрика();
	
КонецФункции

&НаКлиенте
Функция МодульМетрика() Экспорт
	
	Если ТипЗнч(КМетрика) <> Тип("УправляемаяФорма") Тогда
		ИнициализироватьМетрикуКлиент();
	КонецЕсли;
	
	Возврат КМетрика;
	
КонецФункции

&НаКлиенте
Процедура ИнициализироватьМетрикуКлиент()
	
	ПараметрыФормы		= Новый Структура;
	ПараметрыФормы.Вставить("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСерверМетрика);
	ПолныйПутьКФорме	= Объект.ПараметрыКлиентСерверМетрика.ПутьКФормам + "МетрикаУФ";
	
	КМетрика			= ПолучитьФорму(ПолныйПутьКФорме, ПараметрыФормы, ЭтаФорма);
	КМетрика.ВычислитьРазницуЧасовыхПоясов();
	КМетрика.ИнициализироватьКонтекстПриложенияКлиент();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработикаОбъект = РеквизитФормыВЗначение("Объект");
	Объект.ПараметрыКлиентСерверМетрика = ОбработикаОбъект.Метрика_ИнициализироватьПараметрыКлиентСервер(ЭтаФорма);
КонецПроцедуры


//ПРИМЕРЫ РЕАЛИЗАЦИИ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Сообщить(НоваяМетрика().НачалоСеанса().Отправить());
	Сообщить(НоваяМетрика().Категория("НачалоСеанса").ОткрытаФорма(ЭтаФорма).Отправить());
	ПодключитьОбработчикОжидания("Метрика_ОтправитьСтекСобытий", 120);

КонецПроцедуры

&НаКлиенте
Процедура Метрика_ОтправитьСтекСобытий() Экспорт

	//Состояние("Отправляем статистику");
	СтекСобытийКлиент = МодульМетрика().Метрика_СобратьСтекСобытийКлиент();
	Метрика_ОтправитьСтекСобытийСервер(СтекСобытийКлиент);	

КонецПроцедуры

&НаСервере
Процедура Метрика_ОтправитьСтекСобытийСервер(СтекСобытийКлиент = Неопределено)

	МодульОбъекта().Метрика_ОтправитьВсеСобытияСтека(СтекСобытийКлиент);	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Сообщить(НоваяМетрика().Категория("КонецСеанса").ЗакрытаФорма(ЭтаФорма).Отправить());
	Сообщить(НоваяМетрика().КонецСеанса().ДобавитьПеременную("Кол", 10).Отправить());
КонецПроцедуры

&НаКлиенте
Процедура НеНажимать(Команда)
	Кнопка = Элементы.Найти(Команда.Имя);
	Сообщить(НоваяМетрика().НажатаКнопка(Кнопка).НаФорме(ЭтаФорма).Отправить()); 
	//Начнем серверный процесс
	СходитьНаСервер();
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	Сообщить(НоваяМетрика().НажатаНадпись(Элемент).НаФорме(ЭтаФорма).Отправить());
КонецПроцедуры

Процедура СходитьНаСервер()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ДолгийСчетныйПроцесс();
КонецПроцедуры

&НаКлиенте
Процедура ВажноеСообщениеПриИзменении(Элемент)
	Сообщить(НоваяМетрика().ПолеВводаПриИзменении(Элемент).НаФорме(ЭтаФорма).Отправить());
КонецПроцедуры

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Сообщить(НоваяМетрика().СменаСтраницы(ТекущаяСтраница).НаФорме(ЭтаФорма).Отправить());
КонецПроцедуры

&НаКлиенте
Процедура ФлагПриИзменении(Элемент)
	Сообщить(НоваяМетрика().ПриСменеФлажка(Элемент, Флаг).НаФорме(ЭтаФорма).Отправить());
КонецПроцедуры
